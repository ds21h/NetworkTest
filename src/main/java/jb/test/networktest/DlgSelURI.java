/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jb.test.networktest;

import java.awt.Dimension;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jan
 */
class DlgSelURI extends javax.swing.JDialog {

    private Data mData;
    private List<UriEntry> mUriEntries;
    private UriEntry mEntry;
    private UriEntry mEntryWork;
    private DefaultTableModel mModel;

    /**
     * Creates new form DlgSelUri
     */
    DlgSelURI(java.awt.Frame parent, boolean modal, UriEntry pEntry) {
        super(parent, modal);

        int lRow;
        DocumentListener lListener;

        initComponents();

        mEntry = new UriEntry(pEntry);
        mEntryWork = new UriEntry(mEntry);
        mData = Data.getInstance();
        lListener = new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                sSetSave();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                sSetSave();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                sSetSave();
            }
        };

        txtService.getDocument().addDocumentListener(lListener);
        txtName.getDocument().addDocumentListener(lListener);

        mModel = new DefaultTableModel() {
            String[] lColumnName = {"Service", "Name", "URI"};

            @Override
            public int getColumnCount() {
                return lColumnName.length;
            }

            @Override
            public String getColumnName(int pIndex) {
                return lColumnName[pIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        tblURI.setModel(mModel);
        tblURI.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent pSE) {
                if (!pSE.getValueIsAdjusting()) {
                    if (tblURI.getSelectedRowCount() > 0) {
                        btnSelect.setEnabled(true);
                        btnDelete.setEnabled(true);
                    } else {
                        btnSelect.setEnabled(false);
                        btnDelete.setEnabled(false);
                    }
                }
            }
        });
        tblURI.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent pME) {
                if (pME.getButton() == MouseEvent.BUTTON1 && tblURI.getSelectedRow() >= 0) {
                    if (pME.getClickCount() == 2) {
                        btnSelectActionPerformed(null);
                    } else {
                        mEntryWork = mUriEntries.get(tblURI.getSelectedRow());
                        sFillUri();
                    }
                }
            }
        });

        sFillUri();
        btnSave.setEnabled(false);
        sFillTable();
    }
    
    private void sFillUri() {
        lbURI.setText(mEntryWork.xUri());
        lbPars.setText(mEntryWork.xParms());
        lbRequest.setText(mEntryWork.xRequest());
    }

    private void sSetSave() {
        if (txtService.getText().trim().equals("") || txtName.getText().trim().equals("")) {
            btnSave.setEnabled(false);
        } else {
            btnSave.setEnabled(true);
        }
    }

    private void sFillTable() {
        int lRow;

        mUriEntries = mData.xUriEntries();
        mModel.setRowCount(mUriEntries.size());
        for (lRow = 0; lRow < mUriEntries.size(); lRow++) {
            mModel.setValueAt(mUriEntries.get(lRow).xService(), lRow, 0);
            mModel.setValueAt(mUriEntries.get(lRow).xName(), lRow, 1);
            mModel.setValueAt(mUriEntries.get(lRow).xUri(), lRow, 2);
        }
        tblURI.clearSelection();
        btnSelect.setEnabled(false);
        btnDelete.setEnabled(false);
    }

    UriEntry xUriEntry() {
        return mEntry;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlUri = new javax.swing.JPanel();
        lbService = new javax.swing.JLabel();
        txtService = new javax.swing.JTextField();
        lbName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lbUriT = new javax.swing.JLabel();
        lbURI = new javax.swing.JLabel();
        lbParsT = new javax.swing.JLabel();
        lbPars = new javax.swing.JLabel();
        lbRequestT = new javax.swing.JLabel();
        lbRequest = new javax.swing.JLabel();
        spnlTable = new javax.swing.JScrollPane();
        tblURI = new javax.swing.JTable();
        pnlButtons = new javax.swing.JPanel();
        btnSelect = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select IP address");

        lbService.setText("Service:");

        lbName.setText("Name:");

        lbUriT.setText("URI:");

        lbURI.setText("URI");
        lbURI.setToolTipText("");

        lbParsT.setText("Pars:");

        lbPars.setText("Pars");
        lbPars.setToolTipText("");

        lbRequestT.setText("Request:");

        lbRequest.setText("Request");
        lbRequest.setToolTipText("");
        lbRequest.setMaximumSize(new java.awt.Dimension(1000, 14));
        lbRequest.setPreferredSize(new java.awt.Dimension(500, 14));

        javax.swing.GroupLayout pnlUriLayout = new javax.swing.GroupLayout(pnlUri);
        pnlUri.setLayout(pnlUriLayout);
        pnlUriLayout.setHorizontalGroup(
            pnlUriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUriLayout.createSequentialGroup()
                .addComponent(lbService, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtService, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbName, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(196, 196, 196))
            .addGroup(pnlUriLayout.createSequentialGroup()
                .addGroup(pnlUriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbUriT, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbParsT)
                    .addComponent(lbRequestT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlUriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlUriLayout.createSequentialGroup()
                        .addComponent(lbRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(5, 5, 5))
                    .addComponent(lbPars, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbURI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        pnlUriLayout.setVerticalGroup(
            pnlUriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUriLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(pnlUriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtService, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbService))
                .addGap(16, 16, 16)
                .addGroup(pnlUriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbURI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbUriT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbParsT)
                    .addComponent(lbPars, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlUriLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRequestT)
                    .addComponent(lbRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        tblURI.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Naam", "URI"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblURI.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        spnlTable.setViewportView(tblURI);

        btnSelect.setText("Select");
        btnSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlButtonsLayout = new javax.swing.GroupLayout(pnlButtons);
        pnlButtons.setLayout(pnlButtonsLayout);
        pnlButtonsLayout.setHorizontalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlButtonsLayout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSelect, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlButtonsLayout.setVerticalGroup(
            pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnSave)
                .addComponent(btnDelete)
                .addComponent(btnSelect))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnlTable)
                    .addComponent(pnlUri, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 598, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pnlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlUri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectActionPerformed
        mEntry = new UriEntry(mEntryWork);
        setVisible(false);
    }//GEN-LAST:event_btnSelectActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String lName;
        String lService;
        UriEntry lEntry;

        lService = txtService.getText().trim();
        lName = txtName.getText().trim();
        if (lName.equals("") || lService.equals("")) {
            JOptionPane.showMessageDialog(this, "Service and Name must be provided!");
        } else {
            lEntry = new UriEntry(mEntry);
            lEntry.xName(lName);
            lEntry.xService(lService);
            mData.xNewUri(lEntry);
            setVisible(false);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int lIndex;
        UriEntry lEntry;

        if (tblURI.getSelectedRowCount() > 0) {
            lIndex = tblURI.getSelectedRow();
            lEntry = mUriEntries.get(lIndex);
            mData.xDeleteUri(lEntry);
            sFillTable();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSelect;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lbPars;
    private javax.swing.JLabel lbParsT;
    private javax.swing.JLabel lbRequest;
    private javax.swing.JLabel lbRequestT;
    private javax.swing.JLabel lbService;
    private javax.swing.JLabel lbURI;
    private javax.swing.JLabel lbUriT;
    private javax.swing.JPanel pnlButtons;
    private javax.swing.JPanel pnlUri;
    private javax.swing.JScrollPane spnlTable;
    private javax.swing.JTable tblURI;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtService;
    // End of variables declaration//GEN-END:variables
}
