/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jb.test.networktest;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTextField;

/**
 *
 * @author Jan
 */
public class FrmMain extends javax.swing.JFrame {

    private final String cVerbs[] = {"GET", "PUT", "POST", "DELETE"};
    private final String[] cMediaReq = {"Text", "JSON"};
    private final String[] cMediaResp = {"Text", "JSON", "Image"};
    private final String cMediaRest[] = {RestAPI.cMediaText, RestAPI.cMediaJSON, RestAPI.cMediaImage};

    /**
     * Creates new form FrmMain
     */
    public FrmMain() {
        int lCount;

        initComponents();

        cmbVerb.removeAllItems();
        for (lCount = 0; lCount < cVerbs.length; lCount++) {
            cmbVerb.addItem(cVerbs[lCount]);
        }
        cmbVerb.setSelectedIndex(0);
        cmbMediaReq.removeAllItems();
        for (lCount = 0; lCount < cMediaReq.length; lCount++) {
            cmbMediaReq.addItem(cMediaReq[lCount]);
        }
        cmbMediaReq.setSelectedIndex(0);
        cmbMediaResp.removeAllItems();
        for (lCount = 0; lCount < cMediaResp.length; lCount++) {
            cmbMediaResp.addItem(cMediaResp[lCount]);
        }
        cmbMediaResp.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSend = new javax.swing.JButton();
        pnlIP = new javax.swing.JPanel();
        lbIP = new javax.swing.JLabel();
        txtIP1 = new javax.swing.JTextField();
        txtIP2 = new javax.swing.JTextField();
        txtIP3 = new javax.swing.JTextField();
        txtIP4 = new javax.swing.JTextField();
        lbPort = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        btnIP = new javax.swing.JButton();
        pnlURI = new javax.swing.JPanel();
        cmbVerb = new javax.swing.JComboBox<>();
        lbURI = new javax.swing.JLabel();
        txtURI = new javax.swing.JTextField();
        btnUri = new javax.swing.JButton();
        lbPar = new javax.swing.JLabel();
        txtPar = new javax.swing.JTextField();
        pnlReq = new javax.swing.JPanel();
        lbRequest = new javax.swing.JLabel();
        cmbMediaReq = new javax.swing.JComboBox<>();
        scrRequest = new javax.swing.JScrollPane();
        txtRequest = new javax.swing.JTextArea();
        pnlResp = new javax.swing.JPanel();
        lbResponse = new javax.swing.JLabel();
        cmbMediaResp = new javax.swing.JComboBox<>();
        scrResponse = new javax.swing.JScrollPane();
        txtResponse = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        lbIP.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbIP.setText("IP:");
        lbIP.setToolTipText("");
        lbIP.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        txtIP1.setToolTipText("");
        txtIP1.setMaximumSize(new java.awt.Dimension(6, 20));
        txtIP1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIP1FocusLost(evt);
            }
        });
        txtIP1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIP1KeyTyped(evt);
            }
        });

        txtIP2.setToolTipText("");
        txtIP2.setMaximumSize(new java.awt.Dimension(6, 20));
        txtIP2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIP2FocusLost(evt);
            }
        });
        txtIP2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIP2KeyTyped(evt);
            }
        });

        txtIP3.setToolTipText("");
        txtIP3.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIP3FocusLost(evt);
            }
        });
        txtIP3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIP3KeyTyped(evt);
            }
        });

        txtIP4.setToolTipText("");
        txtIP4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIP4FocusLost(evt);
            }
        });
        txtIP4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIP4KeyTyped(evt);
            }
        });

        lbPort.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbPort.setText("Port:");
        lbPort.setToolTipText("");
        lbPort.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        txtPort.setToolTipText("");
        txtPort.setMaximumSize(new java.awt.Dimension(6, 20));
        txtPort.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPortFocusLost(evt);
            }
        });
        txtPort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPortKeyTyped(evt);
            }
        });

        btnIP.setText("...");
        btnIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlIPLayout = new javax.swing.GroupLayout(pnlIP);
        pnlIP.setLayout(pnlIPLayout);
        pnlIPLayout.setHorizontalGroup(
            pnlIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbIP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIP1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIP2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIP3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIP4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbPort)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIP, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlIPLayout.setVerticalGroup(
            pnlIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlIPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbIP)
                    .addComponent(txtIP1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIP2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIP3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIP4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbPort)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIP))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbURI.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbURI.setText("URI:");
        lbURI.setToolTipText("");
        lbURI.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        txtURI.setToolTipText("");
        txtURI.setMaximumSize(new java.awt.Dimension(6, 20));
        txtURI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtURIFocusLost(evt);
            }
        });
        txtURI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtURIKeyTyped(evt);
            }
        });

        btnUri.setText("...");
        btnUri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUriActionPerformed(evt);
            }
        });

        lbPar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbPar.setText("Par:");
        lbPar.setToolTipText("");
        lbPar.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        txtPar.setToolTipText("");
        txtPar.setMaximumSize(new java.awt.Dimension(6, 20));
        txtPar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtParFocusLost(evt);
            }
        });
        txtPar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtParKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout pnlURILayout = new javax.swing.GroupLayout(pnlURI);
        pnlURI.setLayout(pnlURILayout);
        pnlURILayout.setHorizontalGroup(
            pnlURILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlURILayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmbVerb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlURILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbURI)
                    .addComponent(lbPar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlURILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtURI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUri, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlURILayout.setVerticalGroup(
            pnlURILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlURILayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlURILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbVerb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbURI)
                    .addComponent(txtURI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUri))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlURILayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbPar)
                    .addComponent(txtPar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbRequest.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbRequest.setText("Request:");

        cmbMediaReq.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        scrRequest.setPreferredSize(new java.awt.Dimension(250, 96));

        txtRequest.setColumns(20);
        txtRequest.setLineWrap(true);
        txtRequest.setRows(5);
        scrRequest.setViewportView(txtRequest);

        javax.swing.GroupLayout pnlReqLayout = new javax.swing.GroupLayout(pnlReq);
        pnlReq.setLayout(pnlReqLayout);
        pnlReqLayout.setHorizontalGroup(
            pnlReqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReqLayout.createSequentialGroup()
                .addGroup(pnlReqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbMediaReq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbRequest))
                .addGap(18, 18, 18)
                .addComponent(scrRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlReqLayout.setVerticalGroup(
            pnlReqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlReqLayout.createSequentialGroup()
                .addComponent(lbRequest)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlReqLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbMediaReq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(scrRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        lbResponse.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lbResponse.setText("Response:");

        cmbMediaResp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        scrResponse.setPreferredSize(new java.awt.Dimension(166, 126));

        txtResponse.setEditable(false);
        txtResponse.setColumns(20);
        txtResponse.setLineWrap(true);
        txtResponse.setRows(5);
        scrResponse.setViewportView(txtResponse);

        javax.swing.GroupLayout pnlRespLayout = new javax.swing.GroupLayout(pnlResp);
        pnlResp.setLayout(pnlRespLayout);
        pnlRespLayout.setHorizontalGroup(
            pnlRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRespLayout.createSequentialGroup()
                .addComponent(lbResponse)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlRespLayout.createSequentialGroup()
                .addComponent(cmbMediaResp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(scrResponse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlRespLayout.setVerticalGroup(
            pnlRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRespLayout.createSequentialGroup()
                .addComponent(lbResponse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlRespLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlRespLayout.createSequentialGroup()
                        .addComponent(cmbMediaResp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scrResponse, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlURI, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlReq, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlResp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pnlIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 412, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSend)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlURI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlReq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlResp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSend)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIP2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIP2FocusLost
        sTestIPField(txtIP2);
    }//GEN-LAST:event_txtIP2FocusLost

    private void txtIP2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIP2KeyTyped
        hInputDigit(evt);
    }//GEN-LAST:event_txtIP2KeyTyped

    private void txtIP3FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIP3FocusLost
        sTestIPField(txtIP3);
    }//GEN-LAST:event_txtIP3FocusLost

    private void txtIP3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIP3KeyTyped
        hInputDigit(evt);
    }//GEN-LAST:event_txtIP3KeyTyped

    private void txtIP4FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIP4FocusLost
        sTestIPField(txtIP4);
    }//GEN-LAST:event_txtIP4FocusLost

    private void txtIP4KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIP4KeyTyped
        hInputDigit(evt);
    }//GEN-LAST:event_txtIP4KeyTyped

    private void txtIP1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIP1FocusLost
        sTestIPField(txtIP1);
    }//GEN-LAST:event_txtIP1FocusLost

    private void txtIP1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIP1KeyTyped
        hInputDigit(evt);
    }//GEN-LAST:event_txtIP1KeyTyped

    private void txtPortFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPortFocusLost
        sTestPortField(txtPort);
    }//GEN-LAST:event_txtPortFocusLost

    private void txtPortKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPortKeyTyped
        hInputDigit(evt);
    }//GEN-LAST:event_txtPortKeyTyped

    private void txtURIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtURIFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtURIFocusLost

    private void txtURIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtURIKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtURIKeyTyped

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        sSendRequest();
    }//GEN-LAST:event_btnSendActionPerformed

    private void txtParFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtParFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtParFocusLost

    private void txtParKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtParKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtParKeyTyped

    private void btnIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIPActionPerformed
        DlgSelIP lSel;
        IPentry lEntry;
        int[] lIP;
        int lPort;

        lIP = new int[4];
        try {
            lIP[0] = Integer.parseInt(txtIP1.getText());
        } catch (NumberFormatException pExc) {
            lIP[0] = 0;
        }
        try {
            lIP[1] = Integer.parseInt(txtIP2.getText());
        } catch (NumberFormatException pExc) {
            lIP[1] = 0;
        }
        try {
            lIP[2] = Integer.parseInt(txtIP3.getText());
        } catch (NumberFormatException pExc) {
            lIP[2] = 0;
        }
        try {
            lIP[3] = Integer.parseInt(txtIP4.getText());
        } catch (NumberFormatException pExc) {
            lIP[3] = 0;
        }
        try {
            lPort = Integer.parseInt(txtPort.getText());
        } catch (NumberFormatException pExc) {
            lPort = 0;
        }

        lEntry = new IPentry("", lIP, lPort);
        lSel = new DlgSelIP(this, true, lEntry);
        lSel.setVisible(true);
        lEntry = lSel.xIPentry();
        if (lEntry != null) {
            txtIP1.setText(String.valueOf(lEntry.xIP(0)));
            txtIP2.setText(String.valueOf(lEntry.xIP(1)));
            txtIP3.setText(String.valueOf(lEntry.xIP(2)));
            txtIP4.setText(String.valueOf(lEntry.xIP(3)));
            txtPort.setText(String.valueOf(lEntry.xPort()));
        }
        lSel.dispose();
    }//GEN-LAST:event_btnIPActionPerformed

    private void btnUriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUriActionPerformed
        DlgSelURI lSel;
        UriEntry lEntry;
        String lUri;
        String lParms;

        lUri = txtURI.getText().strip();
        lParms = txtPar.getText().strip();
        lEntry = new UriEntry("", "", cmbVerb.getSelectedIndex(), lUri, lParms, cmbMediaReq.getSelectedIndex(), txtRequest.getText().trim(), cmbMediaResp.getSelectedIndex());
        lSel = new DlgSelURI(this, true, lEntry);
        lSel.setVisible(true);
        lEntry = lSel.xUriEntry();
        if (lEntry != null) {
            if (lEntry.xUriType() >= 0){
                cmbVerb.setSelectedIndex(lEntry.xUriType());
            }
            txtURI.setText(lEntry.xUri());
            txtPar.setText(lEntry.xParms());
            if (lEntry.xReqType() >= 0) {
                cmbMediaReq.setSelectedIndex(lEntry.xReqType());
            }
            txtRequest.setText(lEntry.xRequest());
            if (lEntry.xRespType() >= 0) {
                cmbMediaResp.setSelectedIndex(lEntry.xRespType());
            }
        }
        lSel.dispose();
    }//GEN-LAST:event_btnUriActionPerformed

    private void hInputDigit(KeyEvent pEvent) {
        char lInput;

        lInput = pEvent.getKeyChar();
        if (lInput < '0' || lInput > '9') {
            pEvent.consume();
        }
    }

    private boolean sTestIPField(JTextField pIP) {
        String lText;
        boolean lOK;
        int lComp;

        lText = pIP.getText().trim();
        try {
            lComp = Integer.parseInt(lText);
            if (lComp < 0 || lComp > 255) {
                lOK = false;
            } else {
                lOK = true;
            }
        } catch (NumberFormatException pExc) {
            lOK = false;
        }
        if (lOK) {
            pIP.setForeground(Color.BLACK);
        } else {
            pIP.setForeground(Color.red);
        }
        return lOK;
    }

    private boolean sTestPortField(JTextField pPort) {
        String lText;
        boolean lOK;
        int lComp;

        lText = pPort.getText().trim();
        try {
            lComp = Integer.parseInt(lText);
            if (lComp < 0 || lComp > 65535) {
                lOK = false;
            } else {
                lOK = true;
            }
        } catch (NumberFormatException pExc) {
            lOK = false;
        }
        if (lOK) {
            pPort.setForeground(Color.BLACK);
        } else {
            pPort.setForeground(Color.red);
        }
        return lOK;
    }

    private void sSendRequest() {
        int lResult;
        RestAPI lRest;
        RestAPI.RestResult lReply;
        String lVerb;
        ImageIcon mIcon;
        JLabel mImgLabel;

        lVerb = (String) cmbVerb.getSelectedItem();
        lRest = new RestAPI();
        txtResponse.removeAll();
        txtResponse.setText("");
        lRest.xMethod(lVerb);
        lRest.xMediaRequest(cMediaRest[cmbMediaReq.getSelectedIndex()]);
        lRest.xMediaReply(cMediaRest[cmbMediaResp.getSelectedIndex()]);
        lRest.xUrl("http://" + txtIP1.getText() + "." + txtIP2.getText() + "." + txtIP3.getText() + "." + txtIP4.getText() + ":" + txtPort.getText() + "/" + txtURI.getText());
        lRest.xPars(txtPar.getText());
        lRest.xRequest(txtRequest.getText());
        lReply = lRest.xCallApi();
        lResult = lReply.xResult();
        if (lResult == Result.cResultOK) {
            if (lReply.xImage() == null) {
                txtResponse.append(lReply.xReplyS());
                scrResponse.setViewportView(txtResponse);
            } else {
                mIcon = new ImageIcon(lReply.xImage());
                mImgLabel = new JLabel();
                mImgLabel.setIcon(mIcon);
                scrResponse.setViewportView(mImgLabel);
            }
        } else {
            txtResponse.append(lReply.xText() + "\n");
            txtResponse.append(lReply.xReplyS());
            scrResponse.setViewportView(txtResponse);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIP;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnUri;
    private javax.swing.JComboBox<String> cmbMediaReq;
    private javax.swing.JComboBox<String> cmbMediaResp;
    private javax.swing.JComboBox<String> cmbVerb;
    private javax.swing.JLabel lbIP;
    private javax.swing.JLabel lbPar;
    private javax.swing.JLabel lbPort;
    private javax.swing.JLabel lbRequest;
    private javax.swing.JLabel lbResponse;
    private javax.swing.JLabel lbURI;
    private javax.swing.JPanel pnlIP;
    private javax.swing.JPanel pnlReq;
    private javax.swing.JPanel pnlResp;
    private javax.swing.JPanel pnlURI;
    private javax.swing.JScrollPane scrRequest;
    private javax.swing.JScrollPane scrResponse;
    private javax.swing.JTextField txtIP1;
    private javax.swing.JTextField txtIP2;
    private javax.swing.JTextField txtIP3;
    private javax.swing.JTextField txtIP4;
    private javax.swing.JTextField txtPar;
    private javax.swing.JTextField txtPort;
    private javax.swing.JTextArea txtRequest;
    private javax.swing.JTextArea txtResponse;
    private javax.swing.JTextField txtURI;
    // End of variables declaration//GEN-END:variables
}
